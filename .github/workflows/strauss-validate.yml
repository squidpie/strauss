# strauss-validate.yml
# Copyright (C) 2023
# Squidpie

name: strauss-validate
run-name: ${{ github.actor }} is validating strauss
on:
  push:
    branches:
      [dev, stage/*]
  pull_request:
    types: [assigned, opened, synchronize, reopened]
    branches:
      [dev]
  workflow_dispatch: {}

jobs:
  validate:
    name: Validate strauss
    runs-on: ubuntu-latest

    env:
      STRAUSS_ROOT_DIR: ${{ github.workspace }}
      STRAUSS_BUILD_DIR: target/debug
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: '5.x'

      - name: Resolve Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
      
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true

      - name: Setup Strauss Env
        run: |
            ./scripts/gen-gha-env.sh
            cat .env > .env.runtime
            echo ${{ secrets.STRAUSS_SECRETS }} >> .env.runtime
            printf '%b\n' "services:\n    chat:\n        channel: squidbot_roboface\n" > strauss.yml

      - uses: actions/cache@v3
        id: cache-rust
        with:
            path: |
                ~/.cargo/bin/
                ~/.cargo/registry/index/
                ~/.cargo/registry/cache/
                ~/.cargo/git/db/
                target/
            key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Build & Unit Test Services
        run: docker compose --env-file .env -f strauss-build.debug.yml run build
      
      - name: Run Strauss
        run: |
            docker compose --env-file .env.runtime \
                -f docker-compose.gha.yml \
                up -d

      - name: Verify Chat is Running
        run: |
            docker inspect `docker container ls -a | grep "strauss/chat" | awk '{print $1}'` --format='{{.State.Running}}' | grep true

      - name: Inspect Dockers
        #if: failure()
        run: |
            docker inspect `docker container ls -a | grep "strauss/chat" | awk '{print $1}'`
            docker inspect `docker container ls -a | grep "redis:7" | awk '{print $1}'`
            docker inspect `docker container ls -a | grep "chat-test" | awk '{print $1}'`
            docker inspect `docker container ls -a | grep "redis-test" | awk '{print $1}'`
      
      - name: Collect Docker Logs
        #if: failure()
        uses: jwalton/gh-docker-logs@v2.2.1
